{
    "output": [
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are married."
            ],
            "target": [
                "teachers",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are opened."
            ],
            "target": [
                "teachers",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are closed."
            ],
            "target": [
                "teachers",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are seen."
            ],
            "target": [
                "teachers",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are hit."
            ],
            "target": [
                "teachers",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are thinking."
            ],
            "target": [
                "teachers",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are teachers.",
                "They are singing."
            ],
            "target": [
                "teachers",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are married."
            ],
            "target": [
                "leaders",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are opened."
            ],
            "target": [
                "leaders",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are closed."
            ],
            "target": [
                "leaders",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are seen."
            ],
            "target": [
                "leaders",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are hit."
            ],
            "target": [
                "leaders",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are thinking."
            ],
            "target": [
                "leaders",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are leaders.",
                "They are singing."
            ],
            "target": [
                "leaders",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are married."
            ],
            "target": [
                "safe",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are opened."
            ],
            "target": [
                "safe",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are closed."
            ],
            "target": [
                "safe",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are seen."
            ],
            "target": [
                "safe",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are hit."
            ],
            "target": [
                "safe",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are thinking."
            ],
            "target": [
                "safe",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are safe.",
                "They are singing."
            ],
            "target": [
                "safe",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are married."
            ],
            "target": [
                "open",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are opened."
            ],
            "target": [
                "open",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are closed."
            ],
            "target": [
                "open",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are seen."
            ],
            "target": [
                "open",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are hit."
            ],
            "target": [
                "open",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are thinking."
            ],
            "target": [
                "open",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are open.",
                "They are singing."
            ],
            "target": [
                "open",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are married"
            ],
            "target": [
                "close",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are opened"
            ],
            "target": [
                "close",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are closed"
            ],
            "target": [
                "close",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are seen"
            ],
            "target": [
                "close",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are hit"
            ],
            "target": [
                "close",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are thinking"
            ],
            "target": [
                "close",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are close",
                "They are singing"
            ],
            "target": [
                "close",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are married."
            ],
            "target": [
                "excited",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are opened."
            ],
            "target": [
                "excited",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are closed."
            ],
            "target": [
                "excited",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are seen."
            ],
            "target": [
                "excited",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are hit."
            ],
            "target": [
                "excited",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are thinking."
            ],
            "target": [
                "excited",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are excited.",
                "They are singing."
            ],
            "target": [
                "excited",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are married."
            ],
            "target": [
                "concerned",
                "married"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are opened."
            ],
            "target": [
                "concerned",
                "opened"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are closed."
            ],
            "target": [
                "concerned",
                "closed"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "ARG2"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are seen."
            ],
            "target": [
                "concerned",
                "seen"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are hit."
            ],
            "target": [
                "concerned",
                "hit"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are thinking."
            ],
            "target": [
                "concerned",
                "thinking"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "be_disambiguation",
            "test_type": "DIR",
            "test_case": [
                "They are concerned.",
                "They are singing."
            ],
            "target": [
                "concerned",
                "singing"
            ],
            "expected_label": [
                "ARG2",
                "O"
            ],
            "model": "bert",
            "prediction": [
                "ARG2",
                "O"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in fashion.",
                "I work in Amsterdam."
            ],
            "target": [
                "fashion",
                "Amsterdam"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in fashion.",
                "I work in this district."
            ],
            "target": [
                "fashion",
                "this district"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in fashion.",
                "I work in another country."
            ],
            "target": [
                "fashion",
                "another country"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in fashion.",
                "I work in New York."
            ],
            "target": [
                "fashion",
                "New York"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in fashion.",
                "I work in Narnia."
            ],
            "target": [
                "fashion",
                "Narnia"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in sports.",
                "I work in Amsterdam."
            ],
            "target": [
                "sports",
                "Amsterdam"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in sports.",
                "I work in this district."
            ],
            "target": [
                "sports",
                "this district"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in sports.",
                "I work in another country."
            ],
            "target": [
                "sports",
                "another country"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in sports.",
                "I work in New York."
            ],
            "target": [
                "sports",
                "New York"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in sports.",
                "I work in Narnia."
            ],
            "target": [
                "sports",
                "Narnia"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in this industry.",
                "I work in Amsterdam."
            ],
            "target": [
                "this industry",
                "Amsterdam"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in this industry.",
                "I work in this district."
            ],
            "target": [
                "this industry",
                "this district"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in this industry.",
                "I work in another country."
            ],
            "target": [
                "this industry",
                "another country"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in this industry.",
                "I work in New York."
            ],
            "target": [
                "this industry",
                "New York"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in this industry.",
                "I work in Narnia."
            ],
            "target": [
                "this industry",
                "Narnia"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the media sector.",
                "I work in Amsterdam."
            ],
            "target": [
                "the media sector",
                "Amsterdam"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the media sector.",
                "I work in this district."
            ],
            "target": [
                "the media sector",
                "this district"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the media sector.",
                "I work in another country."
            ],
            "target": [
                "the media sector",
                "another country"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the media sector.",
                "I work in New York."
            ],
            "target": [
                "the media sector",
                "New York"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the media sector.",
                "I work in Narnia."
            ],
            "target": [
                "the media sector",
                "Narnia"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the medical field.",
                "I work in Amsterdam."
            ],
            "target": [
                "the medical field",
                "Amsterdam"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the medical field.",
                "I work in this district."
            ],
            "target": [
                "the medical field",
                "this district"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the medical field.",
                "I work in another country."
            ],
            "target": [
                "the medical field",
                "another country"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the medical field.",
                "I work in New York."
            ],
            "target": [
                "the medical field",
                "New York"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "location_recognition",
            "test_type": "DIR",
            "test_case": [
                "I work in the medical field.",
                "I work in Narnia."
            ],
            "target": [
                "the medical field",
                "Narnia"
            ],
            "expected_label": [
                "ARG2",
                "ARGM-LOC"
            ],
            "model": "bert",
            "prediction": [
                "ARGM-LOC",
                "ARGM-LOC"
            ]
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no morals.",
            "target": [
                "morals"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no plans.",
            "target": [
                "plans"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no income.",
            "target": [
                "income"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no power.",
            "target": [
                "power"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no option.",
            "target": [
                "option"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no regrets.",
            "target": [
                "regrets"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no strategy.",
            "target": [
                "strategy"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no boyfriend.",
            "target": [
                "boyfriend"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no voice.",
            "target": [
                "voice"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no money.",
            "target": [
                "money"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no more.",
            "target": [
                "more"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no memory.",
            "target": [
                "memory"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no answers.",
            "target": [
                "answers"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no control.",
            "target": [
                "control"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no interest.",
            "target": [
                "interest"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no ideas.",
            "target": [
                "ideas"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no clue.",
            "target": [
                "clue"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no time.",
            "target": [
                "time"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no hope.",
            "target": [
                "hope"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no fear.",
            "target": [
                "fear"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no explanation.",
            "target": [
                "explanation"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no job.",
            "target": [
                "job"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no interest.",
            "target": [
                "interest"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no gun.",
            "target": [
                "gun"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no willpower.",
            "target": [
                "willpower"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no willpower.",
            "target": [
                "willpower"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no husband.",
            "target": [
                "husband"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no privacy.",
            "target": [
                "privacy"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no prospects.",
            "target": [
                "prospects"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no words.",
            "target": [
                "words"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no power.",
            "target": [
                "power"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no answer.",
            "target": [
                "answer"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no home.",
            "target": [
                "home"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no expectations.",
            "target": [
                "expectations"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no plan.",
            "target": [
                "plan"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no energy.",
            "target": [
                "energy"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no money.",
            "target": [
                "money"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no choice.",
            "target": [
                "choice"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no choices.",
            "target": [
                "choices"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no complaints.",
            "target": [
                "complaints"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no future.",
            "target": [
                "future"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no parents.",
            "target": [
                "parents"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no words.",
            "target": [
                "words"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no ambition.",
            "target": [
                "ambition"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no income.",
            "target": [
                "income"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no alternative.",
            "target": [
                "alternative"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no memory.",
            "target": [
                "memory"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no friends.",
            "target": [
                "friends"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no resources.",
            "target": [
                "resources"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no one.",
            "target": [
                "one"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no say.",
            "target": [
                "say"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no energy.",
            "target": [
                "energy"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no friends.",
            "target": [
                "friends"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no gun.",
            "target": [
                "gun"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no identity.",
            "target": [
                "identity"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no questions.",
            "target": [
                "questions"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no more.",
            "target": [
                "more"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no name.",
            "target": [
                "name"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no business.",
            "target": [
                "business"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no direction.",
            "target": [
                "direction"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no proof.",
            "target": [
                "proof"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no daughter.",
            "target": [
                "daughter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no conscience.",
            "target": [
                "conscience"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no boyfriend.",
            "target": [
                "boyfriend"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no gun.",
            "target": [
                "gun"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no control.",
            "target": [
                "control"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no problems.",
            "target": [
                "problems"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no willpower.",
            "target": [
                "willpower"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no answer.",
            "target": [
                "answer"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no name.",
            "target": [
                "name"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no control.",
            "target": [
                "control"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no plan.",
            "target": [
                "plan"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no power.",
            "target": [
                "power"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no patience.",
            "target": [
                "patience"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no life.",
            "target": [
                "life"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no excuse.",
            "target": [
                "excuse"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no morals.",
            "target": [
                "morals"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no energy.",
            "target": [
                "energy"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no clothes.",
            "target": [
                "clothes"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no weapon.",
            "target": [
                "weapon"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no future.",
            "target": [
                "future"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no enemies.",
            "target": [
                "enemies"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no agenda.",
            "target": [
                "agenda"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no family.",
            "target": [
                "family"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no life.",
            "target": [
                "life"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no conscience.",
            "target": [
                "conscience"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no willpower.",
            "target": [
                "willpower"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no control.",
            "target": [
                "control"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no memory.",
            "target": [
                "memory"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no credibility.",
            "target": [
                "credibility"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no excuses.",
            "target": [
                "excuses"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no chance.",
            "target": [
                "chance"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no response.",
            "target": [
                "response"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no enemies.",
            "target": [
                "enemies"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no parents.",
            "target": [
                "parents"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no life.",
            "target": [
                "life"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no feeling.",
            "target": [
                "feeling"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no purpose.",
            "target": [
                "purpose"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no budget.",
            "target": [
                "budget"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "negating_arg1",
            "test_type": "MFT",
            "test_case": "I have no friends.",
            "target": [
                "friends"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": "ARG1"
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They roll them.",
                "They roll."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They bounce them.",
                "They bounce."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They swing them.",
                "They swing."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They break them.",
                "They break."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They chip them.",
                "They chip."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They crack them.",
                "They crack."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They bend them.",
                "They bend."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They crease them.",
                "They crease."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They crinkle them.",
                "They crinkle."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They cheer them.",
                "They cheer."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They delight them.",
                "They delight."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They thrill them.",
                "They thrill."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                ""
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They blunt them.",
                "They blunt."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They clear them.",
                "They clear."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                ""
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They clean them.",
                "They clean."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They blacken them.",
                "They blacken."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They redden them.",
                "They redden."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They grey them.",
                "They grey."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They awaken them.",
                "They awaken."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They brighten them.",
                "They brighten."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They broaden them.",
                "They broaden."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They solidify them.",
                "They solidify."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They stratify them.",
                "They stratify."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They emulsify them.",
                "They emulsify."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They democratize them.",
                "They democratize."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They decentralize them.",
                "They decentralize."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They crystallize them.",
                "They crystallize."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They accelerate them.",
                "They accelerate."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They ameliorate them.",
                "They ameliorate."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG0"
            ]
        },
        {
            "capability": "theme_in_causative_alternation",
            "test_type": "INV",
            "test_case": [
                "They operate them.",
                "They operate."
            ],
            "target": [
                "them",
                "They"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I sign the letter.",
                "The letter is signed."
            ],
            "target": [
                "letter",
                "letter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I sign the card.",
                "The card is signed."
            ],
            "target": [
                "card",
                "card"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I sign the contract.",
                "The contract is signed."
            ],
            "target": [
                "contract",
                "contract"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I sign the poster.",
                "The poster is signed."
            ],
            "target": [
                "poster",
                "poster"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I sign the Harry Potter.",
                "The Harry Potter is signed."
            ],
            "target": [
                "Harry Potter",
                "Harry Potter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I send the letter.",
                "The letter is sent."
            ],
            "target": [
                "letter",
                "letter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I send the card.",
                "The card is sent."
            ],
            "target": [
                "card",
                "card"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I send the contract.",
                "The contract is sent."
            ],
            "target": [
                "contract",
                "contract"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I send the poster.",
                "The poster is sent."
            ],
            "target": [
                "poster",
                "poster"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I send the Harry Potter.",
                "The Harry Potter is sent."
            ],
            "target": [
                "Harry Potter",
                "Harry Potter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I read the letter.",
                "The letter is read."
            ],
            "target": [
                "letter",
                "letter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I read the card.",
                "The card is read."
            ],
            "target": [
                "card",
                "card"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I read the contract.",
                "The contract is read."
            ],
            "target": [
                "contract",
                "contract"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I read the poster.",
                "The poster is read."
            ],
            "target": [
                "poster",
                "poster"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I read the Harry Potter.",
                "The Harry Potter is read."
            ],
            "target": [
                "Harry Potter",
                "Harry Potter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I tear the letter.",
                "The letter is torn."
            ],
            "target": [
                "letter",
                "letter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I tear the card.",
                "The card is torn."
            ],
            "target": [
                "card",
                "card"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I tear the contract.",
                "The contract is torn."
            ],
            "target": [
                "contract",
                "contract"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I tear the poster.",
                "The poster is torn."
            ],
            "target": [
                "poster",
                "poster"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I tear the Harry Potter.",
                "The Harry Potter is torn."
            ],
            "target": [
                "Harry Potter",
                "Harry Potter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I burn the letter.",
                "The letter is burned."
            ],
            "target": [
                "letter",
                "letter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I burn the card.",
                "The card is burned."
            ],
            "target": [
                "card",
                "card"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I burn the contract.",
                "The contract is burned."
            ],
            "target": [
                "contract",
                "contract"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I burn the poster.",
                "The poster is burned."
            ],
            "target": [
                "poster",
                "poster"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        },
        {
            "capability": "arg1_in_passive",
            "test_type": "INV",
            "test_case": [
                "I burn the Harry Potter.",
                "The Harry Potter is burned."
            ],
            "target": [
                "Harry Potter",
                "Harry Potter"
            ],
            "expected_label": "ARG1",
            "model": "bert",
            "prediction": [
                "ARG1",
                "ARG1"
            ]
        }
    ]
}